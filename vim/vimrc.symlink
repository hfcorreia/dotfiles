"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" General Config
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Set default shell
set shell=/bin/zsh

" Set history limit
set history=1000

" Show current position
set ruler

" Set backspace config
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

" Ingnore case when searching
set ignorecase
set smartcase

" Incremental search
set incsearch

" Show matching bracets
set showmatch

" Set numbers
set nu

" Better command autocompletion
set wildmenu

" No redraw
set lazyredraw

" No linespace between rows
set linespace=0

" For regular expressions
set magic

" No annoying sound on errors
set noerrorbells
set novisualbell
set t_vb=
set tm=500

" Always display status line
set laststatus=2

set textwidth=80
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Text files config
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd BufRead,BufReadPost,FileType *.md set filetype=markdown
autocmd BufRead,FileType gitcommit,*.md,*.txt,*.tex set wrap
autocmd BufRead,FileType gitcommit,*.md,*.txt,*.tex set nonumber
autocmd BufRead,FileType gitcommit,*.md,*.txt,*.tex set textwidth=0
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Spell Checks
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Automatic spellchek
autocmd BufRead,BufNewFile,FileType gitcommit,*.md,*.txt,*.tex  setlocal spell
set complete+=kspell
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Colors and Fonts
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Enable syntax hl
syntax on

" Set background
set background=dark

" Set enconding as utf8
set encoding=utf8
scriptencoding utf-8

set t_Co=256

if has("gui_running")
  set guifont=Monaco
  set guioptions-=T
  set guioptions-=m
  set guioptions-=r
  set guioptions-=l
  set guioptions-=b
  set guioptions-=L
endif
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Files and backup
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Turn off backup
set nobackup
set nowb
set noswapfile

" Look for tags
:set tags=./tags,./../tags,./*/tags
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Tabs and indent
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Expands tab
set expandtab

" Auto-indent
set ai
set si
set ci

" Auto-indent amount
set shiftwidth=2
set shiftround

" Tabs
set tabstop=2
set softtabstop=2
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Mappings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Define the map leader
let mapleader = "\<Space>"

" Stop using <esc>
inoremap jk <esc>
inoremap <esc> <nop>

" Smart way to move btw. windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugins
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Install vim-plug if not available
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" List of plugins to install
call plug#begin('~/.vim/plugged')
Plug 'airblade/vim-gitgutter'
Plug 'bronson/vim-trailing-whitespace'
Plug 'scrooloose/nerdtree'
Plug 'tpope/vim-abolish'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'

" Languages
Plug 'vim-ruby/vim-ruby'

" Search Helpers
Plug '/usr/local/opt/fzf'
Plug 'junegunn/fzf.vim'
call plug#end()
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugins Config
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" NERDTree
map <Leader>, :NERDTreeToggle<CR>
